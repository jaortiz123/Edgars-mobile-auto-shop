name: Nightly CI Triage
on:
  schedule:
    # Run at 2 AM UTC every night
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  triage-archived-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pytest and dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run archived/experimental tests
        id: archived_tests
        run: |
          cd backend
          # Run tests that are normally skipped
          pytest tests/ -k "archived or experimental or slow" --tb=short --maxfail=5 > archived_results.txt 2>&1 || true
          echo "ARCHIVED_RESULTS<<EOF" >> $GITHUB_OUTPUT
          cat archived_results.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check coverage drift
        id: coverage_check
        run: |
          cd backend
          pytest -m "not integration" --cov=. --cov-report=term | tee coverage_report.txt
          CURRENT_COV=$(grep "TOTAL" coverage_report.txt | awk '{print $4}' | sed 's/%//')
          echo "CURRENT_COVERAGE=$CURRENT_COV" >> $GITHUB_OUTPUT
          if (( $(echo "$CURRENT_COV < 50" | bc -l) )); then
            echo "COVERAGE_ALERT=true" >> $GITHUB_OUTPUT
          else
            echo "COVERAGE_ALERT=false" >> $GITHUB_OUTPUT
          fi

      - name: Create issue if problems found
        if: steps.coverage_check.outputs.COVERAGE_ALERT == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const coverage = '${{ steps.coverage_check.outputs.CURRENT_COVERAGE }}';
            const archivedResults = `${{ steps.archived_tests.outputs.ARCHIVED_RESULTS }}`;

            const issueBody = `
            ## ðŸš¨ Nightly CI Triage Alert

            **Coverage Below Threshold**: ${coverage}% (minimum: 50%)

            ### Archived Test Results
            \`\`\`
            ${archivedResults}
            \`\`\`

            ### Recommended Actions
            1. Investigate coverage regression
            2. Review failing archived tests for promotion
            3. Update coverage booster tests if needed

            Auto-generated by nightly triage workflow.
            `;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸš¨ CI Health Alert - Coverage: ${coverage}%`,
              body: issueBody,
              labels: ['ci-triage', 'priority-high']
            });

  test-matrix-health:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Quick smoke test
        run: |
          cd backend
          pip install -r requirements.txt
          # Just run a few critical tests to check compatibility
          python -c "import pytest; import psycopg2; import flask; print('Dependencies OK')"
