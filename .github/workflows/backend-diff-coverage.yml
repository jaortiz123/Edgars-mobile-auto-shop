name: Backend Diff Coverage Quality Gate

on:
  pull_request:
    paths:
      - 'backend/**/*.py'
      - 'backend/requirements*.txt'
      - 'backend/setup.py'
      - 'backend/pyproject.toml'
  push:
    branches: [main]
    paths:
      - 'backend/**/*.py'

jobs:
  diff-coverage:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Fetch full history for diff-cover to work properly
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-rerunfailures diff-cover

    - name: Run tests with coverage
      env:
        TEST_MODE: unit
      run: |
        echo "üîÑ Running tests with coverage and flake detection..."
        pytest --cov=backend \
               --cov-report=xml \
               --cov-report=html \
               --ignore=tests/test_invoice_add_package.py \
               --reruns 2 \
               --reruns-delay 1 \
               -v

    - name: Run diff coverage check
      run: |
        diff-cover coverage.xml \
          --compare-branch=origin/main \
          --fail-under=80 \
          --html-report=htmlcov/diff-coverage-report.html \
          --show-uncovered \
          --show-uncovered-delta

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-reports
        path: |
          backend/htmlcov/
          backend/coverage.xml
        retention-days: 30

    - name: Comment PR with coverage report
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');

          // Try to read diff coverage summary (if available)
          let coverageComment = '## üéØ Diff Coverage Quality Gate\n\n';

          try {
            // This would need to be implemented based on diff-cover output
            coverageComment += '‚úÖ **PASSED**: New/modified lines meet 80% coverage threshold\n\n';
            coverageComment += 'üìä **Reports Available**:\n';
            coverageComment += '- Global Coverage: See artifacts\n';
            coverageComment += '- Diff Coverage: See artifacts\n\n';
            coverageComment += '*Only new/modified code is required to meet the 80% threshold.*';
          } catch (error) {
            coverageComment += '‚ùå **FAILED**: Some new/modified lines do not meet 80% coverage threshold\n\n';
            coverageComment += '**Action Required**: Add tests for highlighted uncovered lines\n\n';
            coverageComment += 'üí° **Tip**: Run `./diff-coverage-check.sh` locally for detailed analysis';
          }

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: coverageComment
          });

  baseline-coverage:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-rerunfailures

    - name: Generate baseline coverage report
      env:
        TEST_MODE: unit
      run: |
        echo "üîÑ Generating baseline coverage with flake detection..."
        pytest --cov=backend \
               --cov-report=xml \
               --cov-report=html \
               --ignore=tests/test_invoice_add_package.py \
               --reruns 2 \
               --reruns-delay 1 \
               -v

    - name: Upload baseline coverage
      uses: actions/upload-artifact@v3
      with:
        name: baseline-coverage-report
        path: |
          backend/htmlcov/
          backend/coverage.xml
        retention-days: 90
