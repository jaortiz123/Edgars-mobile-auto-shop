# Use pinned digest for security and reproducible builds
FROM public.ecr.aws/lambda/python:3.9@sha256:4ac7c7a02065ad8b90c7c3fc862b27bc0afe2e4024c9e0bdbfd89dc12a63c8f7

# Create non-root user for security (though Lambda runtime may override)
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Install system updates and security patches
RUN yum update -y \
    && yum clean all \
    && rm -rf /var/cache/yum

# Install psycopg2-binary with updated version and proper security
RUN pip install --no-cache-dir --upgrade pip==24.0 \
    && pip install --no-cache-dir psycopg2-binary==2.9.9

# Create app directory with proper permissions
RUN mkdir -p /var/task && chown -R appuser:appuser /var/task

# Copy your function code with proper ownership
COPY --chown=appuser:appuser booking_function.py ${LAMBDA_TASK_ROOT}
COPY --chown=appuser:appuser init.sql /var/task/init.sql

# Set proper file permissions
RUN chmod 644 ${LAMBDA_TASK_ROOT}/booking_function.py \
    && chmod 644 /var/task/init.sql

# Add health check for local testing
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import booking_function; print('OK')" || exit 1

# Set environment variables for security
ENV PYTHONPATH=/var/task
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Switch to non-root user
USER appuser

# Set the handler
CMD ["booking_function.lambda_handler"]
